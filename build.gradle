plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.9inProject'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	maven {
		url 'https://repo.mysql.com/'
	}
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Jakarta EE
	implementation 'jakarta.platform:jakarta.jakartaee-api:8.0.0'
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0' // Jakarta Servlet API 버전을 4.0.0으로 변경

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'
	implementation 'org.springframework.security:spring-security-config:5.6.0'
	testImplementation 'org.springframework.security:spring-security-test'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Database
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	runtimeOnly 'com.h2database:h2'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:4.4.0'
	implementation 'com.querydsl:querydsl-core:4.4.0'
	annotationProcessor "com.querydsl:querydsl-apt:4.4.0:jpa"

	// Additional dependencies
	implementation "org.springframework.boot:spring-boot-starter-validation"
	runtimeOnly 'mysql:mysql-connector-java'
}

tasks.named('test') {
	useJUnitPlatform()
}

ext['spring.version'] = '2.5.5'

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}

repositories {
	mavenCentral()
}